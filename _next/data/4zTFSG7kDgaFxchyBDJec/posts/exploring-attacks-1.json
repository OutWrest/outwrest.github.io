{"pageProps":{"frontMatter":{"title":"Exploring Adversarial Attacks on Convolutional Neural Networks - Part 1","description":"Digging into simple CNN adversarial attacks shown in DiceCTF 2024 & osu!gaming CTF 2024","date":"2024-07-13","tags":["ai","vision","ctf","misc"],"slug":"exploring-attacks-1"},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    em: \"em\",\n    code: \"code\",\n    span: \"span\",\n    math: \"math\",\n    semantics: \"semantics\",\n    mrow: \"mrow\",\n    mi: \"mi\",\n    annotation: \"annotation\",\n    msub: \"msub\",\n    mtext: \"mtext\",\n    mo: \"mo\",\n    strong: \"strong\",\n    msup: \"msup\",\n    mn: \"mn\",\n    h2: \"h2\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Math, Challenge} = _components;\n  if (!Challenge) _missingMdxReference(\"Challenge\", true);\n  if (!Math) _missingMdxReference(\"Math\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"div\", {\n      className: \"lead\",\n      children: [_jsx(_components.p, {\n        children: \"I want to be clear, I am not an expert, in either cybersecurity or data science.\\nI am interested in both fields so it becomes very fun exploring the intersection.\"\n      }), _jsxs(_components.p, {\n        children: [\"If you just want the code, \", _jsx(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://github.com/OutWrest/blog-handouts/tree/main/exploring-attacks-1\",\n          children: \"click here\"\n        }), \".\"]\n      })]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Overview\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Introduction\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"#What%20Are%20Adversarial%20Attacks?\",\n          children: \"What Are Adversarial Attacks\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Applying to recent CTF challenges\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Conclusion\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Introduction\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adversarial attacks are not new, but they are not a usual category in CTF competitions.\\nWith the past year or so, I started seeing more competitions including data science related challenges.\\nI want some spend time to explore some adversarial methods and apply them in examples that are easy to translate for competitions.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Before diving into the main topic, I want to mention that I will assume some understanding of machine learning basics.\\n\", _jsx(_components.em, {\n        children: \"Maybe in the future\"\n      }), \" I can further explore these basics to build a ground-up understanding.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this article we will explore white-box model adversarial image attacks and try minimize the difference between the pixels on initial image and the adversarial examples we will create.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"What are Adversarial Attacks?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In machine learning, adversarial attacks are techiques that aim to deceive or compromoise an AI system.\\nThe techiques can include different types of attacks that specially manipluate the system's input, training data or even the inner workings of the model itself.\\nI will focus on the most on attacks that manipluate the AI system's input to get it to an unintended output.\\nThough you can explore more about adversarial attacks \", _jsx(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://en.wikipedia.org/wiki/Adversarial_machine_learning\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"No model is perfect. Machine learning tries to estimate output signals from the training data that is given to it.\\nModels predict an outcome, and in most settings, they usually do a pretty good job at it.\\nThere are always inaccuracies but they can accumulate from the dataset, training methods/architecture or they are inherit to the problem itself.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With convolutional neural networks, especially for image-related problems, a model can become good at identifying shapes & edges for classification.\\nModern image models rely on many parameters (on the smaller end, resnet18 has ~11m parameters) and current research tries to apply these models to bigger and bigger problems.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Exploring adversarial attacks unveils the vulnerability of these seemingly robust models.\\nDespite their sophistication, they can be targeted to produce specific output with a specially crafted input.\\nIn this article, we will go through several popular types of attacks and apply our learning to challenges from recent cybersecurity CTF competitions.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Lets try it out\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's consider the scenario of generating an adversarial example for an ImageNet-trained ResNet18 model.\\nWe will try out some different methods to generate adversarial examples starting from an initial image \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"x\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              })]\n            })\n          })]\n        })\n      }), \".\"]\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/init-imgs.png\",\n        alt: \"Three examples of model input to ResNet18 Model, an all white image, an all black image, and noise image\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"ImageNet-trained ResNet18 model's output probabilities for a white, black and nosie image.\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In all three of the solutions, I will only focus on the following cost function that optimizes for the cross-entropy loss over a specific target, \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsxs(_components.msub, {\n                    children: [_jsx(_components.mi, {\n                      children: \"y\"\n                    }), _jsx(_components.mtext, {\n                      children: \"target\"\n                    })]\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"y_{\\\\text{target}}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.7167em\",\n                  verticalAlign: \"-0.2861em\"\n                }\n              }), _jsxs(_components.span, {\n                className: \"mord\",\n                children: [_jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.03588em\"\n                  },\n                  children: \"y\"\n                }), _jsx(_components.span, {\n                  className: \"msupsub\",\n                  children: _jsxs(_components.span, {\n                    className: \"vlist-t vlist-t2\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist-r\",\n                      children: [_jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.2806em\"\n                        },\n                        children: _jsxs(_components.span, {\n                          style: {\n                            top: \"-2.55em\",\n                            marginLeft: \"-0.0359em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [_jsx(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: _jsx(_components.span, {\n                              className: \"mord mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord text mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: \"target\"\n                                })\n                              })\n                            })\n                          })]\n                        })\n                      }), _jsx(_components.span, {\n                        className: \"vlist-s\",\n                        children: \"​\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-r\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.2861em\"\n                        },\n                        children: _jsx(_components.span, {})\n                      })\n                    })]\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"script\",\n                        children: \"L\"\n                      }), _jsx(_components.mtext, {\n                        children: \"targeted\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mtext, {\n                      children: \"CE\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\mathcal{L}_{\\\\text{targeted}}(x, y_{\\\\text{target}}) = \\\\text{CE}(y_{\\\\text{target}}, f(x))\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathcal\",\n                    children: \"L\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"targeted\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"CE\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \"))\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"x\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                })]\n              })\n            })]\n          })\n        }), \" denotes the model's input, any image.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"y_{\\\\text{target}}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.7167em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                })]\n              })\n            })]\n          })\n        }), \" is the target class that we want to generate an adversarial example for.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mtext, {\n                      children: \"CE\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{CE}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.6833em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"CE\"\n                  })\n                })]\n              })\n            })]\n          })\n        }), \" is the \", _jsx(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://en.wikipedia.org/wiki/Cross-entropy\",\n          children: \"Cross Entropy\"\n        }), \" loss function.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"f(x)\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })\n            })]\n          })\n        }), \" denotes the model.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If we need to, we can also optimize the \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mtext, {\n                    children: \"CE\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\text{CE}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6833em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord text\",\n                children: _jsx(_components.span, {\n                  className: \"mord\",\n                  children: \"CE\"\n                })\n              })]\n            })\n          })]\n        })\n      }), \" loss by maximizing the loss of the true label of \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"x\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              })]\n            })\n          })]\n        })\n      }), \" and the model's output.\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"script\",\n                        children: \"L\"\n                      }), _jsx(_components.mtext, {\n                        children: \"untargeted\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"true\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mtext, {\n                      children: \"CE\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"true\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\mathcal{L}_{\\\\text{untargeted}}(x, y_{\\\\text{true}}) = - \\\\text{CE}(y_{\\\\text{true}}, f(x))\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathcal\",\n                    children: \"L\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"untargeted\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"true\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord\",\n                  children: \"−\"\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"CE\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"true\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \"))\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"true\"\n                      })]\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"y_{\\\\text{true}}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.625em\",\n                    verticalAlign: \"-0.1944em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"true\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                })]\n              })\n            })]\n          })\n        }), \" is the label we want to optimize against.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the solutions, we will also try to keep the adversarial example \", _jsx(_components.strong, {\n        children: \"close\"\n      }), \" to the initial image.\\nThis means that the difference pixels of the original and adversarial image are within a certain number of pixels.\\nWe will do this by \", _jsx(_components.strong, {\n        children: \"clamping\"\n      }), \" the changes after generating an adversarial example or during each iteration.\\nEach solution can just easily remove this restriction, we are keeping it as it leads to the CTF problems easier.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Lastly, these solutions require input to start with, the initial \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsxs(_components.msup, {\n                    children: [_jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mn, {\n                      children: \"0\"\n                    })]\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x^{0}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.8141em\"\n                }\n              }), _jsxs(_components.span, {\n                className: \"mord\",\n                children: [_jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"msupsub\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-t\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-r\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.8141em\"\n                        },\n                        children: _jsxs(_components.span, {\n                          style: {\n                            top: \"-3.063em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [_jsx(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: _jsx(_components.span, {\n                              className: \"mord mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: \"0\"\n                              })\n                            })\n                          })]\n                        })\n                      })\n                    })\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), \".\\nWe will start with using the white image from the diagram above, and later transition the attack to use a picture of my bird below.\"]\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        src: \"/post-assets/exploring-attacks-1/burb-img.png\",\n        alt: \"Yellow parakeet\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"ImageNet-trained ResNet18 model's output probabilities for the bird.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's finally jump in the solutions.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Iterative naive solution\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can write out a simple solution to generate an adversarial image given an inital image \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"x\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"x\"\n              })]\n            })\n          })]\n        })\n      }), \".\\nWe can iteratively optimize for a better solution.\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          children: \"+\"\n                        }), _jsx(_components.mn, {\n                          children: \"1\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"α\"\n                    }), _jsx(_components.mo, {\n                      children: \"⋅\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsxs(_components.msup, {\n                        children: [_jsx(_components.mi, {\n                          children: \"x\"\n                        }), _jsxs(_components.mrow, {\n                          children: [_jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \"(\"\n                          }), _jsx(_components.mi, {\n                            children: \"k\"\n                          }), _jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \")\"\n                          })]\n                        })]\n                      })]\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"script\",\n                        children: \"L\"\n                      }), _jsx(_components.mtext, {\n                        children: \"targeted\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x^{(k+1)} = x^{(k)} - \\\\alpha \\\\cdot \\\\nabla_{x^{(k)}} \\\\mathcal{L}_{\\\\text{targeted}}(f(x^{(k)}), y_{\\\\text{target}})\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.888em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mbin mtight\",\n                                  children: \"+\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: \"1\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.9713em\",\n                    verticalAlign: \"-0.0833em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"−\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4445em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.0037em\"\n                  },\n                  children: \"α\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"⋅\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.1741em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3448em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.4694em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsxs(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: [_jsx(_components.span, {\n                                    className: \"mord mathnormal mtight\",\n                                    children: \"x\"\n                                  }), _jsx(_components.span, {\n                                    className: \"msupsub\",\n                                    children: _jsx(_components.span, {\n                                      className: \"vlist-t\",\n                                      children: _jsx(_components.span, {\n                                        className: \"vlist-r\",\n                                        children: _jsx(_components.span, {\n                                          className: \"vlist\",\n                                          style: {\n                                            height: \"0.822em\"\n                                          },\n                                          children: _jsxs(_components.span, {\n                                            style: {\n                                              top: \"-2.822em\",\n                                              marginRight: \"0.0714em\"\n                                            },\n                                            children: [_jsx(_components.span, {\n                                              className: \"pstrut\",\n                                              style: {\n                                                height: \"2.5357em\"\n                                              }\n                                            }), _jsx(_components.span, {\n                                              className: \"sizing reset-size3 size1 mtight\",\n                                              children: _jsxs(_components.span, {\n                                                className: \"mord mtight\",\n                                                children: [_jsx(_components.span, {\n                                                  className: \"mopen mtight\",\n                                                  children: \"(\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mord mathnormal mtight\",\n                                                  style: {\n                                                    marginRight: \"0.03148em\"\n                                                  },\n                                                  children: \"k\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mclose mtight\",\n                                                  children: \")\"\n                                                })]\n                                              })\n                                            })]\n                                          })\n                                        })\n                                      })\n                                    })\n                                  })]\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2306em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathcal\",\n                    children: \"L\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"targeted\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x^{(k)}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.888em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                })]\n              })\n            })]\n          })\n        }), \" denotes the image at iteration \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"k\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"k\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.6944em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.03148em\"\n                  },\n                  children: \"k\"\n                })]\n              })\n            })]\n          })\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"α\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\alpha\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.0037em\"\n                  },\n                  children: \"α\"\n                })]\n              })\n            })]\n          })\n        }), \" is the step size at each iteration.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsxs(_components.msup, {\n                        children: [_jsx(_components.mi, {\n                          children: \"x\"\n                        }), _jsxs(_components.mrow, {\n                          children: [_jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \"(\"\n                          }), _jsx(_components.mi, {\n                            children: \"k\"\n                          }), _jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \")\"\n                          })]\n                        })]\n                      })]\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"script\",\n                        children: \"L\"\n                      }), _jsx(_components.mtext, {\n                        children: \"targeted\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\nabla_{x^{(k)}} \\\\mathcal{L}_{\\\\text{targeted}}(f(x^{(k)}), y_{\\\\text{target}})\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.1741em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3448em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.4694em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsxs(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: [_jsx(_components.span, {\n                                    className: \"mord mathnormal mtight\",\n                                    children: \"x\"\n                                  }), _jsx(_components.span, {\n                                    className: \"msupsub\",\n                                    children: _jsx(_components.span, {\n                                      className: \"vlist-t\",\n                                      children: _jsx(_components.span, {\n                                        className: \"vlist-r\",\n                                        children: _jsx(_components.span, {\n                                          className: \"vlist\",\n                                          style: {\n                                            height: \"0.822em\"\n                                          },\n                                          children: _jsxs(_components.span, {\n                                            style: {\n                                              top: \"-2.822em\",\n                                              marginRight: \"0.0714em\"\n                                            },\n                                            children: [_jsx(_components.span, {\n                                              className: \"pstrut\",\n                                              style: {\n                                                height: \"2.5357em\"\n                                              }\n                                            }), _jsx(_components.span, {\n                                              className: \"sizing reset-size3 size1 mtight\",\n                                              children: _jsxs(_components.span, {\n                                                className: \"mord mtight\",\n                                                children: [_jsx(_components.span, {\n                                                  className: \"mopen mtight\",\n                                                  children: \"(\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mord mathnormal mtight\",\n                                                  style: {\n                                                    marginRight: \"0.03148em\"\n                                                  },\n                                                  children: \"k\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mclose mtight\",\n                                                  children: \")\"\n                                                })]\n                                              })\n                                            })]\n                                          })\n                                        })\n                                      })\n                                    })\n                                  })]\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2306em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathcal\",\n                    children: \"L\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"targeted\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })\n            })]\n          })\n        }), \" represents the gradient of the cost function with respect to \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x^{(k)}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.888em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                })]\n              })\n            })]\n          })\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Using gradient descent, we can slowly come up with a solution that maximizes the probability of the target.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Lets try an example in python using pytorch and apply this simple iterative solution.\\nStarting from a completely white image, lets try to get the model to predict class index \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"0\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"0\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"0\"\n              })]\n            })\n          })]\n        })\n      }), \", which maps to \\\"tench.\\\"\\nHere is the python code to do this gradient descent:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# class 0 is \\\"tench\\\"\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# convert the white image to a tensor and normalize it to the same range as the model's input (0-1)\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"white_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# allow gradients to be calculated since we want to optimize the image\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# step size for the gradient descent\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# our objective is to maximize the probability of the target class\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" F\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cross_entropy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# calculate the gradient of the loss with respect to the input image\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# apply gradient descent to the image, this step is usually done by the optimizer\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# but we're doing it manually here, by taking the gradient of the image and updating it\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# zero the gradient for the next iteration\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# probably not needed\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# clamp the image to the valid pixel range [0, 1]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.5425\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"window shade\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.05\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9.2704\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"dishrag\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.04\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10.1515\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"nematode\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.45\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.6952\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"brain coral\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.15\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.4389\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"American alligator\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.96\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.7709\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"American alligator\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.01\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.2306\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10.06\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.2304\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"brain coral\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"17.83\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.4371\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"35.66\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.0132\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"96.03\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0390\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.90\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"11\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0015\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.92\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0013\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.93\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"13\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0012\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.93\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"14\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0011\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.94\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"\\\"tench\\\" maps to our target index of \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"0\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"0\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"0\"\n              })]\n            })\n          })]\n        })\n      }), \", \", _jsx(_components.strong, {\n        children: \"succes!\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Lets see how the adversarial example looks.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/white-img-adv-1.png\",\n        alt: \"White image classified as tench\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Starting from a completely white image - we are able to produce an adversarial image with any class we pick.\\nThe adversarial example is not visually recognizable as a \\\"tench\\\" but the model predicts it with high confidence.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"How different is the adversarial example to our original image?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To calculate the difference of the original image adversarial example, we track three different metrics.\\nWe will keep track of the max, mean, and min pixel difference of the two images.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The code to do this is very simple:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"diff \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"abs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"white_img \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" current_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"max_diff\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mean_diff\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" min_diff \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" diff\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"max\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" diff\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"mean\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" diff\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"min\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is the pixel difference from our initial solution:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Max  difference:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"209.00\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Mean difference:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"14.36\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Min  difference:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's try to create another adversarial using the same method but lets try to minimize our \", _jsx(_components.em, {\n        children: \"changes\"\n      }), \" to the image.\\nWe will clamp the image so that the changes are within a certain range.\\nI will arbitrarily pick that our adversarial example should \", _jsxs(_components.strong, {\n        children: [\"within \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mn, {\n                      children: \"10\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"10\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.6444em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord\",\n                  children: \"10\"\n                })]\n              })\n            })]\n          })\n        }), \" pixels\"]\n      }), \".\\nThis is common theme that shows up in CTF challeges, so lets try this out here.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Iterative naive solution (with clamping)\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's define a new function \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mtext, {\n                    children: \"clip\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\text{clip}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.8889em\",\n                  verticalAlign: \"-0.1944em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord text\",\n                children: _jsx(_components.span, {\n                  className: \"mord\",\n                  children: \"clip\"\n                })\n              })]\n            })\n          })]\n        })\n      }), \" that can simplify clamping.\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mtext, {\n                      children: \"clip\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mtext, {\n                      children: \"clamp\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{clip}(x,\\\\epsilon) = \\\\text{clamp}(x, x - \\\\epsilon, x + \\\\epsilon)\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"clip\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"clamp\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"−\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.7778em\",\n                    verticalAlign: \"-0.1944em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mtext, {\n                      children: \"clamp\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mtext, {\n                      children: \"min_value\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mtext, {\n                      children: \"max_value\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{clamp}(x, \\\\text{min\\\\_value}, \\\\text{max\\\\_value})\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.06em\",\n                    verticalAlign: \"-0.31em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"clamp\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"min_value\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"max_value\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })\n            })]\n          })\n        }), \" is function that clamps the value of \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"x\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                })]\n              })\n            })]\n          })\n        }), \" between \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mtext, {\n                      children: \"min_value\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{min\\\\_value}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0044em\",\n                    verticalAlign: \"-0.31em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"min_value\"\n                  })\n                })]\n              })\n            })]\n          })\n        }), \" and \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mtext, {\n                      children: \"max_value\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{max\\\\_value}\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0044em\",\n                    verticalAlign: \"-0.31em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"max_value\"\n                  })\n                })]\n              })\n            })]\n          })\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\epsilon\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                })]\n              })\n            })]\n          })\n        }), \" is the maximum allowed change.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We easily add a restriction to our equation to clip \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsxs(_components.msup, {\n                    children: [_jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsxs(_components.mrow, {\n                      children: [_jsx(_components.mo, {\n                        stretchy: \"false\",\n                        children: \"(\"\n                      }), _jsx(_components.mi, {\n                        children: \"k\"\n                      }), _jsx(_components.mo, {\n                        stretchy: \"false\",\n                        children: \")\"\n                      })]\n                    })]\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x^{(k)}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.888em\"\n                }\n              }), _jsxs(_components.span, {\n                className: \"mord\",\n                children: [_jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"msupsub\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-t\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-r\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.888em\"\n                        },\n                        children: _jsxs(_components.span, {\n                          style: {\n                            top: \"-3.063em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [_jsx(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: _jsxs(_components.span, {\n                              className: \"mord mtight\",\n                              children: [_jsx(_components.span, {\n                                className: \"mopen mtight\",\n                                children: \"(\"\n                              }), _jsx(_components.span, {\n                                className: \"mord mathnormal mtight\",\n                                style: {\n                                  marginRight: \"0.03148em\"\n                                },\n                                children: \"k\"\n                              }), _jsx(_components.span, {\n                                className: \"mclose mtight\",\n                                children: \")\"\n                              })]\n                            })\n                          })]\n                        })\n                      })\n                    })\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), \" to be within \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"10\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"10\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"10\"\n              })]\n            })\n          })]\n        })\n      }), \" pixels of \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsxs(_components.msup, {\n                    children: [_jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mn, {\n                      children: \"0\"\n                    })]\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x^{0}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.8141em\"\n                }\n              }), _jsxs(_components.span, {\n                className: \"mord\",\n                children: [_jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"msupsub\",\n                  children: _jsx(_components.span, {\n                    className: \"vlist-t\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-r\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.8141em\"\n                        },\n                        children: _jsxs(_components.span, {\n                          style: {\n                            top: \"-3.063em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [_jsx(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: _jsx(_components.span, {\n                              className: \"mord mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: \"0\"\n                              })\n                            })\n                          })]\n                        })\n                      })\n                    })\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          children: \"+\"\n                        }), _jsx(_components.mn, {\n                          children: \"1\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mtext, {\n                      children: \"clip\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"α\"\n                    }), _jsx(_components.mo, {\n                      children: \"⋅\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsxs(_components.msup, {\n                        children: [_jsx(_components.mi, {\n                          children: \"x\"\n                        }), _jsxs(_components.mrow, {\n                          children: [_jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \"(\"\n                          }), _jsx(_components.mi, {\n                            children: \"k\"\n                          }), _jsx(_components.mo, {\n                            stretchy: \"false\",\n                            children: \")\"\n                          })]\n                        })]\n                      })]\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"script\",\n                        children: \"L\"\n                      }), _jsx(_components.mtext, {\n                        children: \"targeted\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"f\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x^{(k+1)} = \\\\text{clip}(x^{(k)} - \\\\alpha \\\\cdot \\\\nabla_{x^{(k)}} \\\\mathcal{L}_{\\\\text{targeted}}(f(x^{(k)}), y_{\\\\text{target}}), \\\\epsilon)\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.888em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mbin mtight\",\n                                  children: \"+\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: \"1\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.138em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"clip\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"−\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4445em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.0037em\"\n                  },\n                  children: \"α\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"⋅\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.1741em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3448em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.4694em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsxs(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: [_jsx(_components.span, {\n                                    className: \"mord mathnormal mtight\",\n                                    children: \"x\"\n                                  }), _jsx(_components.span, {\n                                    className: \"msupsub\",\n                                    children: _jsx(_components.span, {\n                                      className: \"vlist-t\",\n                                      children: _jsx(_components.span, {\n                                        className: \"vlist-r\",\n                                        children: _jsx(_components.span, {\n                                          className: \"vlist\",\n                                          style: {\n                                            height: \"0.822em\"\n                                          },\n                                          children: _jsxs(_components.span, {\n                                            style: {\n                                              top: \"-2.822em\",\n                                              marginRight: \"0.0714em\"\n                                            },\n                                            children: [_jsx(_components.span, {\n                                              className: \"pstrut\",\n                                              style: {\n                                                height: \"2.5357em\"\n                                              }\n                                            }), _jsx(_components.span, {\n                                              className: \"sizing reset-size3 size1 mtight\",\n                                              children: _jsxs(_components.span, {\n                                                className: \"mord mtight\",\n                                                children: [_jsx(_components.span, {\n                                                  className: \"mopen mtight\",\n                                                  children: \"(\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mord mathnormal mtight\",\n                                                  style: {\n                                                    marginRight: \"0.03148em\"\n                                                  },\n                                                  children: \"k\"\n                                                }), _jsx(_components.span, {\n                                                  className: \"mclose mtight\",\n                                                  children: \")\"\n                                                })]\n                                              })\n                                            })]\n                                          })\n                                        })\n                                      })\n                                    })\n                                  })]\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2306em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathcal\",\n                    children: \"L\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"targeted\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.10764em\"\n                  },\n                  children: \"f\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the arbitrary restriction, we should set \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsxs(_components.mrow, {\n                  children: [_jsx(_components.mi, {\n                    children: \"ϵ\"\n                  }), _jsx(_components.mo, {\n                    children: \"=\"\n                  }), _jsx(_components.mn, {\n                    children: \"10\"\n                  })]\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\epsilon = 10\"\n                })]\n              })\n            })\n          }), _jsxs(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: [_jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"ϵ\"\n              }), _jsx(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mrel\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"mspace\",\n                style: {\n                  marginRight: \"0.2778em\"\n                }\n              })]\n            }), _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"10\"\n              })]\n            })]\n          })]\n        })\n      }), \".\\nLet's write the code out to include this restriction.\\nWe will also track the pixel differences during each iteration.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"white_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"white_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"white_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# reduced from 1 to 0.1\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"epsilon \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"25\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" F\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cross_entropy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# clamp within epsilon\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" white_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" white_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.5425\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.00/0.51 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"corkscrew\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.76\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.4247\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/0.67 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"corkscrew\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.45\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.8976\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/0.88 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"ski\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.38\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.8823\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/1.11 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"ski\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.74\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.5663\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/1.34 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"ski\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.05\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.6579\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/1.57 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"snowmobile\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.57\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.3951\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/1.82 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"envelope\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.24\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.9340\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.11 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"spider web\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.73\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.3351\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.31 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"whistle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.70\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.5793\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.48 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"spider web\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.55\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.4742\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.64 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tray\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10.74\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"11\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.0233\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.82 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"spider web\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.89\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.9147\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/2.95 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tray\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.78\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"13\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.1300\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.08 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"envelope\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.82\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"14\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.8309\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.23 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.76\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.7523\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.34 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"brain coral\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.50\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"16\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.3318\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.46 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.90\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"17\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.8901\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.57 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"brain coral\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10.10\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"18\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.0373\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.71 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"broom\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.58\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"19\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.7803\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.83 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"30.13\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"20\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.1454\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.90 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50.96\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"21\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5941\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.95 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"74.24\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"22\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2818\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/3.99 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.14\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"23\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0085\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/4.03 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.76\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"24\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0051\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/10.00/4.03 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.81\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We needed to do more interations than previous example. but we seem to still be able to create an adversarial example.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/white-img-adv-2.png\",\n        alt: \"White image classified as tench\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example with clamping.\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Applying solution to an actual image\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the burb example shown earlier in the article, let's try to create an adversarial example that would classified as a \", _jsx(_components.code, {\n        children: \"assault rifle\"\n      }), \" (index \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"413\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"413\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"413\"\n              })]\n            })\n          })]\n        })\n      }), \").\\nWe will also use a lower \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"ϵ\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\epsilon\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"ϵ\"\n              })]\n            })\n          })]\n        })\n      }), \", the perturbations should be within \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"1\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"1\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"1\"\n              })]\n            })\n          })]\n        })\n      }), \" pixel of the original image.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"413\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# lets lower the epsilon to a lower pixel difference\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"epsilon \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" F\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cross_entropy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"13.438\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.76 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"puffer\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.17\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.1450\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.70 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"goose\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6.03\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.7022\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.73 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.97\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.8506\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.75 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15.59\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.6048\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.77 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"24.72\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.1955\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.77 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"64.57\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3494\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.71 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"88.91\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0869\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.66 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"88.80\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0470\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.66 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90.01\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0376\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/0.66 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"91.72\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Even with a very low \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"ϵ\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\epsilon\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"ϵ\"\n              })]\n            })\n          })]\n        })\n      }), \", we are still able to generate a high confidence image that is able to classified into \", _jsx(_components.code, {\n        children: \"assault rifle\"\n      }), \".\\nLet's see what the new image looks like.\"]\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/burb-img-adv-1.png\",\n        alt: \"Burb image classified as assault rifle\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on burb image.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Following the graident directly is not the best to generate adversarial examples, let's try to implement other methods that are widely used.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Fast Gradient Signed Method (FGSM) Solution\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Fast Gradient Signed Method (FGSM) is a popular technique for generating adversarial examples.\\nIt works by calculating the gradient of the loss function with respect to the input image and then perturbing the input image in the \", _jsx(_components.strong, {\n        children: \"direction\"\n      }), \" of the gradient.\\nThe amount of perturbation is controlled by a parameter \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mi, {\n                    children: \"ϵ\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"\\\\epsilon\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.4306em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord mathnormal\",\n                children: \"ϵ\"\n              })]\n            })\n          })]\n        })\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The adversarial example \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsxs(_components.msub, {\n                    children: [_jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mtext, {\n                      children: \"adv\"\n                    })]\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"x_{\\\\text{adv}}\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.5806em\",\n                  verticalAlign: \"-0.15em\"\n                }\n              }), _jsxs(_components.span, {\n                className: \"mord\",\n                children: [_jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"msupsub\",\n                  children: _jsxs(_components.span, {\n                    className: \"vlist-t vlist-t2\",\n                    children: [_jsxs(_components.span, {\n                      className: \"vlist-r\",\n                      children: [_jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.3361em\"\n                        },\n                        children: _jsxs(_components.span, {\n                          style: {\n                            top: \"-2.55em\",\n                            marginLeft: \"0em\",\n                            marginRight: \"0.05em\"\n                          },\n                          children: [_jsx(_components.span, {\n                            className: \"pstrut\",\n                            style: {\n                              height: \"2.7em\"\n                            }\n                          }), _jsx(_components.span, {\n                            className: \"sizing reset-size6 size3 mtight\",\n                            children: _jsx(_components.span, {\n                              className: \"mord mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord text mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: \"adv\"\n                                })\n                              })\n                            })\n                          })]\n                        })\n                      }), _jsx(_components.span, {\n                        className: \"vlist-s\",\n                        children: \"​\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"vlist-r\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist\",\n                        style: {\n                          height: \"0.15em\"\n                        },\n                        children: _jsx(_components.span, {})\n                      })\n                    })]\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      }), \" is generated as follows:\"]\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsx(_components.mtext, {\n                        children: \"adv\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      children: \"+\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      children: \"⋅\"\n                    }), _jsx(_components.mtext, {\n                      children: \"sign\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsx(_components.mi, {\n                        children: \"x\"\n                      })]\n                    }), _jsx(_components.mi, {\n                      children: \"J\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"θ\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x_{\\\\text{adv}} = x + \\\\epsilon \\\\cdot \\\\text{sign}(\\\\nabla_x J(\\\\theta, x, y_{\\\\text{target}}))\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.5806em\",\n                    verticalAlign: \"-0.15em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.3361em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"adv\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.6667em\",\n                    verticalAlign: \"-0.0833em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4445em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"⋅\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"sign\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.1514em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mathnormal mtight\",\n                                children: \"x\"\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.09618em\"\n                  },\n                  children: \"J\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.02778em\"\n                  },\n                  children: \"θ\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \"))\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"x\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                })]\n              })\n            })]\n          })\n        }), \" is the original input image\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\epsilon\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                })]\n              })\n            })]\n          })\n        }), \" is the perturbation magnitude (\", _jsx(_components.em, {\n          children: \"how much to change the original image\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsx(_components.mi, {\n                        children: \"x\"\n                      })]\n                    }), _jsx(_components.mi, {\n                      children: \"J\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"θ\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\nabla_x J(\\\\theta, x, y_{\\\\text{target}})\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.1514em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mathnormal mtight\",\n                                children: \"x\"\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.09618em\"\n                  },\n                  children: \"J\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.02778em\"\n                  },\n                  children: \"θ\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })\n            })]\n          })\n        }), \" is the gradient of the loss function \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"J\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"J\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.6833em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.09618em\"\n                  },\n                  children: \"J\"\n                })]\n              })\n            })]\n          })\n        }), \" with respect to \", _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"x\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                })]\n              })\n            })]\n          })\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsx(_components.mtext, {\n                      children: \"sign\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mo, {\n                      children: \"⋅\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\text{sign}(\\\\cdot)\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"sign\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord\",\n                  children: \"⋅\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })\n            })]\n          })\n        }), \" denotes the sign function.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's try to use FSGM on the same example problem that we've been working on using the burb image as the initial image.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# we will target index 0, which is \\\"tench, Tinca tinca\\\"\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"epsilon \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"F\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cross_entropy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x_adv \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" epsilon \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"sign\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x_adv \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x_adv\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Loss: \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-9.0888\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.00/2.00 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"tench\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"29.52\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In FSGM, we only generate a single example through the calculation and we do not iterate on our adversarial example.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/burb-img-adv-fsgm.png\",\n        alt: \"Burb image classified as tench\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on burb image using FSGM.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Since FGSM is sensative to epsilon and input image.\\nDepending on input image & target class, it may be that FSGM is the best solution but it is a good start.\\nIn our case, we are trying to optimize for very low perturbation to get a model to classify an image into targeted category.\\nWhile it was able to generate a solution for this case, it did not produce an example with high confidence.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Projected Gradient Descent (PGD) Solution\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Projected Gradient Descent (PGD) method is an iterative extension of FGSM.\\nInstead of applying the perturbation only once, PGD iteratively perturbs the input image in small steps.\\nThis iterative process helps to find more effective adversarial examples while keeping the perturbations within a specified limit.\"\n    }), \"\\n\", _jsx(Math, {\n      children: _jsx(_components.p, {\n        children: _jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsxs(_components.mrow, {\n                    children: [_jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          children: \"+\"\n                        }), _jsx(_components.mn, {\n                          children: \"1\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"=\"\n                    }), _jsx(_components.mtext, {\n                      children: \"clip\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msup, {\n                      children: [_jsx(_components.mi, {\n                        children: \"x\"\n                      }), _jsxs(_components.mrow, {\n                        children: [_jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \"(\"\n                        }), _jsx(_components.mi, {\n                          children: \"k\"\n                        }), _jsx(_components.mo, {\n                          stretchy: \"false\",\n                          children: \")\"\n                        })]\n                      })]\n                    }), _jsx(_components.mo, {\n                      children: \"−\"\n                    }), _jsx(_components.mi, {\n                      children: \"α\"\n                    }), _jsx(_components.mo, {\n                      children: \"⋅\"\n                    }), _jsx(_components.mtext, {\n                      children: \"sign\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        mathvariant: \"normal\",\n                        children: \"∇\"\n                      }), _jsx(_components.mi, {\n                        children: \"x\"\n                      })]\n                    }), _jsx(_components.mi, {\n                      children: \"J\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \"(\"\n                    }), _jsx(_components.mi, {\n                      children: \"θ\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"x\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsxs(_components.msub, {\n                      children: [_jsx(_components.mi, {\n                        children: \"y\"\n                      }), _jsx(_components.mtext, {\n                        children: \"target\"\n                      })]\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    }), _jsx(_components.mo, {\n                      separator: \"true\",\n                      children: \",\"\n                    }), _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    }), _jsx(_components.mo, {\n                      stretchy: \"false\",\n                      children: \")\"\n                    })]\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"x^{(k+1)} = \\\\text{clip}(x^{(k)} - \\\\alpha \\\\cdot \\\\text{sign}(\\\\nabla_x J(\\\\theta, x, y_{\\\\text{target}})), \\\\epsilon)\"\n                  })]\n                })\n              })\n            }), _jsxs(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: [_jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.888em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mbin mtight\",\n                                  children: \"+\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mtight\",\n                                  children: \"1\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mrel\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2778em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.138em\",\n                    verticalAlign: \"-0.25em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"clip\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    children: \"x\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsx(_components.span, {\n                      className: \"vlist-t\",\n                      children: _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.888em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-3.063em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsxs(_components.span, {\n                                className: \"mord mtight\",\n                                children: [_jsx(_components.span, {\n                                  className: \"mopen mtight\",\n                                  children: \"(\"\n                                }), _jsx(_components.span, {\n                                  className: \"mord mathnormal mtight\",\n                                  style: {\n                                    marginRight: \"0.03148em\"\n                                  },\n                                  children: \"k\"\n                                }), _jsx(_components.span, {\n                                  className: \"mclose mtight\",\n                                  children: \")\"\n                                })]\n                              })\n                            })]\n                          })\n                        })\n                      })\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"−\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4445em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.0037em\"\n                  },\n                  children: \"α\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mbin\",\n                  children: \"⋅\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.2222em\"\n                  }\n                })]\n              }), _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"1.0361em\",\n                    verticalAlign: \"-0.2861em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord text\",\n                  children: _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"sign\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"∇\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.1514em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"0em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mathnormal mtight\",\n                                children: \"x\"\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.15em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.09618em\"\n                  },\n                  children: \"J\"\n                }), _jsx(_components.span, {\n                  className: \"mopen\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.02778em\"\n                  },\n                  children: \"θ\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"x\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsxs(_components.span, {\n                  className: \"mord\",\n                  children: [_jsx(_components.span, {\n                    className: \"mord mathnormal\",\n                    style: {\n                      marginRight: \"0.03588em\"\n                    },\n                    children: \"y\"\n                  }), _jsx(_components.span, {\n                    className: \"msupsub\",\n                    children: _jsxs(_components.span, {\n                      className: \"vlist-t vlist-t2\",\n                      children: [_jsxs(_components.span, {\n                        className: \"vlist-r\",\n                        children: [_jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2806em\"\n                          },\n                          children: _jsxs(_components.span, {\n                            style: {\n                              top: \"-2.55em\",\n                              marginLeft: \"-0.0359em\",\n                              marginRight: \"0.05em\"\n                            },\n                            children: [_jsx(_components.span, {\n                              className: \"pstrut\",\n                              style: {\n                                height: \"2.7em\"\n                              }\n                            }), _jsx(_components.span, {\n                              className: \"sizing reset-size6 size3 mtight\",\n                              children: _jsx(_components.span, {\n                                className: \"mord mtight\",\n                                children: _jsx(_components.span, {\n                                  className: \"mord text mtight\",\n                                  children: _jsx(_components.span, {\n                                    className: \"mord mtight\",\n                                    children: \"target\"\n                                  })\n                                })\n                              })\n                            })]\n                          })\n                        }), _jsx(_components.span, {\n                          className: \"vlist-s\",\n                          children: \"​\"\n                        })]\n                      }), _jsx(_components.span, {\n                        className: \"vlist-r\",\n                        children: _jsx(_components.span, {\n                          className: \"vlist\",\n                          style: {\n                            height: \"0.2861em\"\n                          },\n                          children: _jsx(_components.span, {})\n                        })\n                      })]\n                    })\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \"))\"\n                }), _jsx(_components.span, {\n                  className: \"mpunct\",\n                  children: \",\"\n                }), _jsx(_components.span, {\n                  className: \"mspace\",\n                  style: {\n                    marginRight: \"0.1667em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                }), _jsx(_components.span, {\n                  className: \"mclose\",\n                  children: \")\"\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Where:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"α\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\alpha\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  style: {\n                    marginRight: \"0.0037em\"\n                  },\n                  children: \"α\"\n                })]\n              })\n            })]\n          })\n        }), \" is the step size.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          className: \"language-math math-inline\",\n          children: _jsxs(_components.span, {\n            className: \"katex\",\n            children: [_jsx(_components.span, {\n              className: \"katex-mathml\",\n              children: _jsx(_components.math, {\n                xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                children: _jsxs(_components.semantics, {\n                  children: [_jsx(_components.mrow, {\n                    children: _jsx(_components.mi, {\n                      children: \"ϵ\"\n                    })\n                  }), _jsx(_components.annotation, {\n                    encoding: \"application/x-tex\",\n                    children: \"\\\\epsilon\"\n                  })]\n                })\n              })\n            }), _jsx(_components.span, {\n              className: \"katex-html\",\n              \"aria-hidden\": \"true\",\n              children: _jsxs(_components.span, {\n                className: \"base\",\n                children: [_jsx(_components.span, {\n                  className: \"strut\",\n                  style: {\n                    height: \"0.4306em\"\n                  }\n                }), _jsx(_components.span, {\n                  className: \"mord mathnormal\",\n                  children: \"ϵ\"\n                })]\n              })\n            })]\n          })\n        }), \" is the maximimal allowed perturbation.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Again, let's apply PGD to the same problem.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# we will target index 413, which is \\\"assault rifle, assault gun\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"413\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"burb_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"permute\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"epsilon \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# we will allow a maximum of 5 pixel difference\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# step size at each iteration (how many pixels to move each iteration)\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" F\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cross_entropy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"sign\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" burb_img_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" epsilon\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/attacks-introduction.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"13.438\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.00/1.00 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"puffer\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.08\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.0757\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.00/1.75 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"muzzle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3.38\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.8234\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.00/2.55 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15.30\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.8669\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.00/3.22 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"68.43\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3802\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/5.00/4.04 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"84.15\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1732\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.00/4.18 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90.14\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"6\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1038\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.00/4.42 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"92.51\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0781\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.00/4.55 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"94.01\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0620\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.00/4.69 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"95.16\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0498\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/max/mean: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.00/4.75 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"assault rifle\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"96.24\"\n          }), \"% confidence\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With PGD we are able to generate a targeted image at a higher confidence than using a simple gradient descent method.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/burb-img-adv-pgd.png\",\n        alt: \"Burb image classified as assault rifle\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on burb image using PGD.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Notice how this perturbation image is closer to FGSM than the simple iterative method.\\nThe bottom left of this PGD perturbation image shows the pixel different around the bottom left following certain edges, but around the middle it gets sparse.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's move forward and try to these techiques to recent CTF challenges.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Applying to recent CTF challenges\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the following two CTF challenges, we will try both the techniques that worked well for us in the previous sections.\\nThe navie gradient descent and PGD (following the sign of the gradient).\\nFSGM will be able to generate an adversarial example but will not be able to solve the challenge alone in these cases.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(Challenge, {\n      competition: \"DiceCTF 2024 Quals\",\n      competitionLink: \"https://ctftime.org/event/2217/\",\n      challenge: \"what-a-jpeg-is\",\n      author: \"ireland\",\n      category: \"misc\",\n      solves: \"6\",\n      points: \"396\",\n      children: [_jsx(_components.p, {\n        children: \"I just want a picture of a god-dang Madagascar cat\"\n      }), _jsx(\"pre\", {\n        className: \"bg-gray-900\",\n        children: \"nc mc.ax 31373\"\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"Let's start by looking at the code (partially shown):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"pytorch_jpeg_compress\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"img_tensors\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    out_tensors \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" img_tensor \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" img_tensors\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        quality \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"random\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"randint\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        img \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fromarray\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"                np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clip\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"img_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cpu\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"numpy\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"swapaxes\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"swapaxes\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"uint8\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"with\"\n          }), \" io\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"BytesIO\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"save\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"JPEG\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" quality\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"quality\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            img \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"open\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"io\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"BytesIO\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"getvalue\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        out_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"array\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"swapaxes\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"swapaxes\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            device\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"img_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"device\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        out_tensors\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"append\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"out_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    out_tensors \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"stack\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"out_tensors\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" out_tensors\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"np_original \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"openmybook \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"ToTensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"normalize \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.485\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.456\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.406\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.229\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.225\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"reading_glasses \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"RandomResizedCrop\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"384\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" antialias\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" target_id \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"388\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    breed \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"config\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"id2label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"target_id\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"split\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\",\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    inp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"input\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token string-interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"I love cats! My favorite breed is \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"breed\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \". Can you show me a picture of one?\\\\n\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"try\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        np_breed \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"frombuffer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"base64\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"standard_b64decode\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"inp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"uint8\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        np_breed \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np_breed\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"reshape\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np_original\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"shape\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"assert\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"max\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"abs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np_original\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"int\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" np_breed\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"int\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"except\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Sorry I only like cats that look exactly like my cat!\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" flush\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        sys\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"exit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" i \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fromarray\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np_breed\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"uint8\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" openmybook\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# ToTensor\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" pytorch_jpeg_compress\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# RandomCompress\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# ImageNet normalization\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" reading_glasses\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# RandomResizedCrop\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"with\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"no_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            logits \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"logits\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"argmax\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"item\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"!=\"\n          }), \" target_id\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token string-interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"That doesn't look like a \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"breed\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"!\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            sys\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"exit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"with\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"open\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"flag.txt\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"read\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/dicegang/dicectf-quals-2024-challenges/blob/main/misc/what-a-jpeg-is/challenge/challenge.py\",\n        children: \"https://github.com/dicegang/dicectf-quals-2024-challenges/blob/main/misc/what-a-jpeg-is/challenge/challenge.py\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A couple of things to note:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The adversarial example needs to be within \", _jsxs(_components.strong, {\n          children: [_jsx(_components.code, {\n            className: \"language-math math-inline\",\n            children: _jsxs(_components.span, {\n              className: \"katex\",\n              children: [_jsx(_components.span, {\n                className: \"katex-mathml\",\n                children: _jsx(_components.math, {\n                  xmlns: \"http://www.w3.org/1998/Math/MathML\",\n                  children: _jsxs(_components.semantics, {\n                    children: [_jsx(_components.mrow, {\n                      children: _jsx(_components.mn, {\n                        children: \"9\"\n                      })\n                    }), _jsx(_components.annotation, {\n                      encoding: \"application/x-tex\",\n                      children: \"9\"\n                    })]\n                  })\n                })\n              }), _jsx(_components.span, {\n                className: \"katex-html\",\n                \"aria-hidden\": \"true\",\n                children: _jsxs(_components.span, {\n                  className: \"base\",\n                  children: [_jsx(_components.span, {\n                    className: \"strut\",\n                    style: {\n                      height: \"0.6444em\"\n                    }\n                  }), _jsx(_components.span, {\n                    className: \"mord\",\n                    children: \"9\"\n                  })]\n                })\n              })]\n            })\n          }), \" pixels\"]\n        }), \" of the original image.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"The adversarial example needs to be robust to \", _jsx(_components.strong, {\n          children: \"JPEG compression\"\n        }), \", \", _jsx(_components.strong, {\n          children: \"random crops\"\n        }), \", and \", _jsx(_components.strong, {\n          children: \"resizing\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We need to generate 5 \", _jsx(_components.strong, {\n          children: \"confident\"\n        }), \" adversarial examples in a row (we can't just get lucky on one).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We already know how we can generate a \", _jsx(_components.strong, {\n        children: \"confident\"\n      }), \" adversarial example through iterative training, methods like FSGM won't work for us here.\\nGenerating robust examples will be the real challenge.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can apply the same augmentations during each iteration loop and apply the gradients slowly until we each the final image. This will create a both a confident and robust adversarial example. The only problem here is that JPEG lossy image encoding is non-differentiable, we can't simply use it out of the box for backward propagation.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After some research it looks like there's already some papers that tackle the same problem:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://arxiv.org/abs/2309.06978\",\n          children: \"Reich, Christoph, et al. \\\"Differentiable jpeg: The devil is in the details.\\\" 2024.\"\n        }), \" \", _jsx(_components.a, {\n          href: \"https://github.com/necla-ml/Diff-JPEG\",\n          children: \"(Code)\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://machine-learning-and-security.github.io/papers/mlsec17_paper_54.pdf\",\n          children: \"Shin, Richard, and Dawn Song. \\\"Jpeg-resistant adversarial images.\\\" 2017.\"\n        }), \" \", _jsx(_components.a, {\n          href: \"https://github.com/mlomnitz/DiffJPEG\",\n          children: \"(Code)\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When I was doing the challenge, I only found the 2017 paper and their codea but the challenge probably could be solved with either (I actually later found out that since quality isn't drastic, it is possible to solve by ignoring the JPEG compression entirely).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's try to do both iterative methods (simple gradient following and following the sign of the gradient).\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"n_iterations \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"100\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" device\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"device\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# do the same for 383 - 388\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"eps \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# perturbation size, set lower than needed for rounding errors\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"bs \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# batch size - not really needed, but stabilizes training and improves convergence & consistency of adversarial examples\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" img_original_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clone\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# helps as each forward pass is different, helps stabilize training\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"forward\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" differentiable_jpeg\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" random\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"randint\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# check the full code\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" random_crop\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"logits\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" x\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"n_iterations\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"    \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    logits \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" forward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" loss_func\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"step\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/what-jpeg-is-DiceCTF-2024.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/what-jpeg-is-DiceCTF-2024.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"    \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.5492\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"54.20\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/1.44/3.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2835\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"75.32\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/5.35/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"20\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1862\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"83.01\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.11/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"30\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1670\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"84.62\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.17/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"40\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4805\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"61.85\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.03/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1488\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"86.17\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.14/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"60\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0966\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90.80\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.15/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"70\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1279\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"88.00\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.10/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"80\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0514\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"94.99\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.08/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0598\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"94.19\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/6.09/9.00\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/what-is-jpeg-is-DiceCTF-2024-simple.png\",\n        alt: \"Three images that showcase the adversarial attack.\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on provided image using a simple iterative method.\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"With only \", _jsx(_components.code, {\n        className: \"language-math math-inline\",\n        children: _jsxs(_components.span, {\n          className: \"katex\",\n          children: [_jsx(_components.span, {\n            className: \"katex-mathml\",\n            children: _jsx(_components.math, {\n              xmlns: \"http://www.w3.org/1998/Math/MathML\",\n              children: _jsxs(_components.semantics, {\n                children: [_jsx(_components.mrow, {\n                  children: _jsx(_components.mn, {\n                    children: \"100\"\n                  })\n                }), _jsx(_components.annotation, {\n                  encoding: \"application/x-tex\",\n                  children: \"100\"\n                })]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"katex-html\",\n            \"aria-hidden\": \"true\",\n            children: _jsxs(_components.span, {\n              className: \"base\",\n              children: [_jsx(_components.span, {\n                className: \"strut\",\n                style: {\n                  height: \"0.6444em\"\n                }\n              }), _jsx(_components.span, {\n                className: \"mord\",\n                children: \"100\"\n              })]\n            })\n          })]\n        })\n      }), \" iterations, we easily were able to start making confident adversarial examples.\\nLet's try out PGD and see if we able to get better results.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"n_iterations \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"100\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"target_output \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"long\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" device\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"device\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# do the same for 383 - 388\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"eps \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# perturbation size, set lower than needed for rounding errors\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"bs \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# batch size - not really needed, but stabilizes training and improves convergence & consistency of adversarial examples\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \".5\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# step size\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" img_original_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clone\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"loss_func \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"nn\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"CrossEntropyLoss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"forward\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" differentiable_jpeg\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" random\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"randint\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" random_crop\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"logits\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" x\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"n_iterations\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"    \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    logits \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" forward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# helps as each forward pass is different, helps stabilize training\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" loss_func\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"target_output\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"    \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"autograd\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"    \\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"sign\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/what-jpeg-is-DiceCTF-2024.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/what-jpeg-is-DiceCTF-2024.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"    \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"9.8105\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"48.51\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/0.06/1.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"4.3521\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"40.86\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/0.87/5.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"20\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.0837\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"35.09\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/1.42/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"30\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6920\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50.06\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/1.82/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"40\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1363\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"87.25\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.05/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0625\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"93.94\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.22/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"60\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0259\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"97.44\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.46/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"70\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5.2534\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"27.16\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.70/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"80\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0133\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"98.68\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.89/9.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0045\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"383\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"99.55\"\n          }), \"%\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.13/9.00\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"PDG is able generate more confident examples at a lesser perturbation difference. Please check out the full code listed above, it should be all reproducible.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/what-is-jpeg-is-DiceCTF-2024-pgd.png\",\n        alt: \"Three images that showcase the adversarial attack.\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on provided image using PGD.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To solve the rest the challenge, we just need to do this 5 more times and try them out remote machine.\\nI do not have the full solve code here but you can easily extend the scripts I have provided to do so.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(Challenge, {\n      competition: \"osu!gaming CTF 2024\",\n      competitionLink: \"https://ctftime.org/event/2165/\",\n      challenge: \"i-hate-anime-girls\",\n      author: \"segal\",\n      category: \"misc\",\n      solves: \"6\",\n      points: \"396\",\n      children: [_jsx(_components.p, {\n        children: \"osu! players love their anime girls. But I HATE anime girls. So much so that I trained a neural network to filter my map backgrounds.\\nBut tbh, I really want to pp farm hitorigoto and my map filter won't let me. Can you fool it?\"\n      }), _jsx(\"pre\", {\n        className: \"bg-gray-900\",\n        children: \"nc chal.osugaming.lol 7274\"\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"This challenge comes with 3 different files, \", _jsx(_components.code, {\n        children: \"hitorigoto.png\"\n      }), \", \", _jsx(_components.code, {\n        children: \"model.pt\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"server.py\"\n      }), \". Let's explore the code first to figure out how to get the flag.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" resnet18\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fc \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" nn\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Linear\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fc\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"in_features\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"load_state_dict\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"load\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"model.pt\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"resize \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Resize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" antialias\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"None\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"to_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"ToTensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"normalize \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" T\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.485\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.456\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.406\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.229\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.225\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"original \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"array\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"Image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"open\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"hitorigoto.png\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"inp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"input\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string-interpolation\",\n            children: _jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"Enter a base64 encoded image.\\\\n\\\"\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"try\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    img \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"frombuffer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"base64\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"standard_b64decode\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"inp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dtype\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"uint8\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    img \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"reshape\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"original\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"shape\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"assert\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"max\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"abs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"original\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"int32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"astype\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"int32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"except\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"That doesn't look like hitorigoto!\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    sys\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"exit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" Image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fromarray\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"resize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"to_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"unsqueeze\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"with\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"no_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"sigmoid\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"That's obviously an anime girl.\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    sys\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"exit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"elif\"\n          }), \" y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.825\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"I'm not fully convinced that's not an anime girl.\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    sys\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"exit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"with\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"open\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"flag.txt\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"Surely that's not an anime girl.\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"f\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"read\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://drive.google.com/file/d/1qqJ2xrlrvppz50bjAzmfhpX66Y-UkqnM/view\",\n        children: \"https://drive.google.com/file/d/1qqJ2xrlrvppz50bjAzmfhpX66Y-UkqnM/view\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The whole point of this challenge seems to be able to create a confident (>82.5% confidence) adversarial example from the given image that is able to be resistant against the resizing.\\nWe already know how to do this, but this challenge posed a problem for me initially. I was getting very inconsistent results.\\nI found out the challenge author left \", _jsx(_components.code, {\n        children: \".eval()\"\n      }), \" in the code.\\nThis left the current model in training mode. For us, this just means that it will be harder to generate adversarial example because the batch normalization layers won't be applied to our input.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's try the same two methods in the previous challenge on this one.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"n_iterations \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1250\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"eps \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"bs \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"32\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# not needed\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" img_original_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clone\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"detach\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad_\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# made use of lr_scheduler to reduce the learning rate when the loss stops decreasing\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# this helps model converge as this problem is hard to optimize\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"optimizer \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"optim\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Adam\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" lr\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5e-1\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# we will only optimize the input image\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"lr_scheduler \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"optim\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"lr_scheduler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"ReduceLROnPlateau\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" patience\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"50\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" verbose\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" factor\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"loss_func \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" nn\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"BCEWithLogitsLoss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"forward\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" resize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" x\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"n_iterations\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    logits \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" forward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# bs not needed\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" loss_func\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"ones_like\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# maximize the output of the model\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"backward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    optimizer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"step\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    lr_scheduler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"step\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/i-hate-anime-girls-osugaming-2024.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/i-hate-anime-girls-osugaming-2024.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"    \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.0104\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1339\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.80/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"62\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8145\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4429\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.46/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"124\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7141\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4896\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.50/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"186\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4650\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6282\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.40/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"248\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4427\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6423\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.45/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"310\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3205\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7258\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.26/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"372\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3281\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7203\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.12/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"434\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2920\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7468\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.94/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"496\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2534\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7762\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.69/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"558\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1844\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8316\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.61/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"620\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1768\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8380\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.63/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"682\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1810\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8344\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.67/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"744\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1501\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8606\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.66/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"806\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1472\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8631\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.66/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"868\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1463\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8639\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.68/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"930\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1309\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8773\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.68/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"992\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1298\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8783\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.67/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1054\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1285\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8794\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.68/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1116\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1282\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8796\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.70/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1178\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1210\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8860\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.70/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1240\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1207\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8863\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.70/7.00\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We had to use some tricks to generate an examples that is able to be confident enough for the flag.\\nI had to apply a learning rate scheduler that would reduce the step size by half if it doesn't improve after 50 iterations.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/i-hate-anime-girls-osugaming-2024-simple.png\",\n        alt: \"Three images that showcase the adversarial attack.\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on provided image using a simple iterative method.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The difference map shows something very interesting with vertical lines spread throughout. I think this is an artifact of optimizing before the resizing operation.\\nLet's try the PGD and see if it does better.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"n_iterations \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2000\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"eps \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7.\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"bs \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"32\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# not needed\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \".1\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"max_iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"100\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"best_loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"float\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'inf'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" img_original_tensor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clone\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"detach\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"requires_grad_\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"loss_func \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" nn\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"BCEWithLogitsLoss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"forward\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" resize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" normalize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" x\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" iteration \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"range\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"n_iterations\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"zero_grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# this is the fix for the author's mistake\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    logits \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" forward\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cat\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" bs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" dim\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# bs not needed\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" loss_func\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"ones_like\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"logits\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# maximize the output of the model\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    grad \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"autograd\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"sign\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"grad\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" torch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"clamp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"data\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" img_original_tensor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" eps\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"item\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" best_loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.05\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        best_loss \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"item\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"else\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">=\"\n          }), \" max_iters_since_improvement\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            alpha \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.5\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            iters_since_improvement \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token string-interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"Reducing alpha to \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"alpha\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(\"p\", {\n      className: \"mr-4 subtext\",\n      style: {\n        fontSize: '0.75rem'\n      },\n      children: [\"full code: \", _jsx(_components.a, {\n        href: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/i-hate-anime-girls-osugaming-2024.ipynb\",\n        children: \"https://github.com/OutWrest/blog-handouts/blob/main/exploring-attacks-1/i-hate-anime-girls-osugaming-2024.ipynb\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), \"    \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.0104\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1339\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.80/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"100\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2.0053\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1346\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.80/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.06666666666666667\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"200\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.9217\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1464\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.79/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.044444444444444446\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"300\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.8906\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1510\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/4.23/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.02962962962962963\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"400\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.8724\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1538\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.31/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"500\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.5570\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2108\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.32/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.019753086419753086\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"600\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.4528\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2339\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.20/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"700\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.5776\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2065\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.20/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.01316872427983539\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"800\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1.2085\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2986\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.97/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.008779149519890261\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"900\"\n          }), \"  \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.9222\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3976\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.87/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.005852766346593507\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1000\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6689\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5123\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/2.97/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1100\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5700\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.5655\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.03/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.003901844231062338\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1200\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4041\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6676\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.21/8.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.002601229487374892\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1300\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.4183\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.6581\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.25/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1400\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.3224\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7244\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.19/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0017341529915832611\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1500\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2673\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7654\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.22/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0011561019943888407\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1600\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2352\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7904\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.25/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0007707346629258938\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1700\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2144\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8070\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.28/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.0005138231086172625\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1800\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.2014\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8176\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.29/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.000342548739078175\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Iter: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1900\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Loss:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.1925\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" Pred:  \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.8249\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"|\"\n          }), \" min/mean/max diff: \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00\"\n          }), \"/3.30/7.00\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"Reducing alpha to \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.00022836582605211667\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I wasn't able to generate another example that does better than the previous method in terms of confidence using PGD.\\nBut it should be enough to be used to solve the challenge.\"\n    }), \"\\n\", _jsxs(\"div\", {\n      className: \"flex items-center justify-center flex-col\",\n      children: [_jsx(\"img\", {\n        className: \"block\",\n        src: \"/post-assets/exploring-attacks-1/i-hate-anime-girls-osugaming-2024-pgd.png\",\n        alt: \"Three images that showcase the adversarial attack.\"\n      }), _jsx(\"p\", {\n        className: \"mr-4 subtext\",\n        style: {\n          fontSize: '0.75rem'\n        },\n        children: \"The output adversarial example on provided image using PGD.\"\n      })]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this exploration of a few different adversarial attacks on CNNs, we learned about some widely used practical techiques, specifically in context of solving CTF challenges.\\nI really hope that conveyed these ideas clearly and I would strongly encourage you to go through the code repository linked to get a clearer idea about how to apply these methods.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"While brief, I wanted to show some real examples from CTF challenges that used similar ideas.\\nI think we'll probably see more CTFs creating AI/ML focused challenges.\\nFeel free to reach out to me through discord if you have any questions.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Exploring Adversarial Attacks on Convolutional Neural Networks - Part 1","description":"Digging into simple CNN adversarial attacks shown in DiceCTF 2024 & osu!gaming CTF 2024","date":"2024-07-13","tags":["ai","vision","ctf","misc"],"slug":"exploring-attacks-1"}},"previous":null,"next":null},"__N_SSG":true}